/**
* Author: Francisco Coya.
* Description: SQL script to create the booking database for the application LeonCamp.
* Version: v1.0.0
* License: 2022 All Rights Reserved.
*/

-- SET FOREIGN_KEY_CHECKS = 0;

-- DROP DATABASE IF EXISTS DB_BOOKING;

-- CREATE DATABASE DB_BOOKING;
-- USE DB_BOOKING;

USE heroku_9a632479322a297;


DROP TABLE IF EXISTS USER_HOST;
DROP TABLE IF EXISTS HOST_LANGUAGE;
DROP TABLE IF EXISTS APP_USER;
DROP TABLE IF EXISTS APP_SEARCH;
DROP TABLE IF EXISTS USER_SEARCH_HISTORY;
DROP TABLE IF EXISTS APP_PLAN;
DROP TABLE IF EXISTS APP_LANGUAGE;
DROP TABLE IF EXISTS APP_CURRENCY;
DROP TABLE IF EXISTS USER_CONFIGURATION;
DROP TABLE IF EXISTS PLAN_FEATURE;
DROP TABLE IF EXISTS PLAN_FEATURE_APP_PLAN;
DROP TABLE IF EXISTS PLAN_SUBSCRIPTION;
DROP TABLE IF EXISTS ACCOMODATION;
DROP TABLE IF EXISTS ACCOMODATION_TYPE;
DROP TABLE IF EXISTS ACCOMODATION_SERVICE;
DROP TABLE IF EXISTS ACCOMODATION_ACC_SERVICE;
DROP TABLE IF EXISTS ACCOMODATION_RULE;
DROP TABLE IF EXISTS ACCOMODATION_ACC_RULE;
DROP TABLE IF EXISTS ACCOMODATION_IMAGE;
DROP TABLE IF EXISTS ACCOMODATION_LOCATION;
DROP TABLE IF EXISTS PROMO_CODE;
DROP TABLE IF EXISTS BOOKING;
DROP TABLE IF EXISTS BOOKING_BILL;
DROP TABLE IF EXISTS PAYMENT;
DROP TABLE IF EXISTS PAYMENT_CREDIT_CARD;
DROP TABLE IF EXISTS PAYMENT_PAYPAL;
DROP TABLE IF EXISTS USER_REVIEW;
DROP TABLE IF EXISTS ACCOMODATION_REVIEW;
DROP TABLE IF EXISTS SAVED_ACCOMODATION;

-- ----------------------------

CREATE TABLE APP_LANGUAGE (
    ID INT AUTO_INCREMENT,
    LANG ENUM('ES', 'EN', 'IT', 'FR'),
    CONSTRAINT PK_APP_LANGUAGE PRIMARY KEY (ID)
);

-- APP CURRENCY - ISO 4217

CREATE TABLE APP_CURRENCY (
    ID INT AUTO_INCREMENT,
    CURRENCY_ALPHANUMERIC_CODE VARCHAR(3),
    CURRENCY_NAME VARCHAR(65) NOT NULL,
    CURRENCY_CODE INT,
    CONSTRAINT PK_APP_CURRENCY PRIMARY KEY (ID)
);

-- USER CONFIGURATION --> REGISTERED USER CAN SAVE THEIR CONFIGURATION
-- THE SAME CONFIGURATION COULD BE SHARED BELONG TWO USERS
CREATE TABLE USER_CONFIGURATION (
    ID INT AUTO_INCREMENT,
    ID_APP_LANGUAGE INT NOT NULL,
    ID_CURRENCY INT NOT NULL,
    CONSTRAINT PK_USER_CONFIGURATION PRIMARY KEY (ID),
    CONSTRAINT FK_USER_CONFIGURATION_APP_LANGUAGE FOREIGN KEY (ID_APP_LANGUAGE)
        REFERENCES APP_LANGUAGE (ID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_USER_CONFIGURATION_APP_CURRENCY FOREIGN KEY (ID_CURRENCY)
        REFERENCES APP_CURRENCY (ID) ON UPDATE CASCADE ON DELETE CASCADE
);

-- GENERAL SEARCHES
CREATE TABLE APP_SEARCH (
    ID INT AUTO_INCREMENT,
    WORD MEDIUMTEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_APP_SEARCH PRIMARY KEY (ID)
);

-- STARTED USER
CREATE TABLE APP_USER (
    ID INT AUTO_INCREMENT,
    UNAME VARCHAR(20) NOT NULL,
    SURNAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(80) NOT NULL,
    PHONE VARCHAR(15),
    PASS VARCHAR(64) NOT NULL,
    PROFILE_IMG BLOB,
    ID_APP_CONFIGURATION INT,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_APP_USER PRIMARY KEY (ID),
    CONSTRAINT FK_APP_USER FOREIGN KEY (ID_APP_CONFIGURATION)
        REFERENCES USER_CONFIGURATION (ID)
        ON UPDATE CASCADE ON DELETE SET NULL
);

-- USER SEARCH HISTORY
CREATE TABLE USER_SEARCH_HISTORY (
    ID INT AUTO_INCREMENT,
    ID_USER INT NOT NULL,
    ID_SEARCH INT NOT NULL,
    CONSTRAINT PK_USER_SEARCH_HISTORY PRIMARY KEY (ID),
    CONSTRAINT FK_USER_SEARCH_HISTORY_APP_USER FOREIGN KEY (ID_USER)
        REFERENCES APP_USER (ID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_USER_SEARCH_HISTORY_APP_SEARCH FOREIGN KEY (ID_SEARCH)
        REFERENCES APP_SEARCH (ID) ON UPDATE CASCADE ON DELETE CASCADE
);

-- HOST USER
CREATE TABLE USER_HOST (
    ID INT AUTO_INCREMENT,
    DNI VARCHAR(9) NOT NULL,
    BIO MEDIUMTEXT,
    IS_DNI_VERIFIED BOOLEAN DEFAULT FALSE,
    IS_EMAIL_VERIFIED BOOLEAN DEFAULT FALSE,
    IS_PHONE_VERIFIED BOOLEAN DEFAULT FALSE,
    IS_VERIFIED BOOLEAN DEFAULT FALSE,
    DIRECTION VARCHAR(100) NOT NULL,
    CONSTRAINT PK_USER_HOST PRIMARY KEY (ID),
    CONSTRAINT FK_HOST_USER FOREIGN KEY (ID)
        REFERENCES APP_USER (ID)
);

-- HOST LANGUAGE - HOST CAN SPEAK MANY LANGUAGES
CREATE TABLE HOST_LANGUAGE (
    ID_HOST INT NOT NULL,
    ID_LANG INT NOT NULL,
    IS_NATIVE BOOLEAN DEFAULT FALSE,
    CONSTRAINT PK_HOST_HOST_LANGUAGE PRIMARY KEY (ID_HOST , ID_LANG),
    CONSTRAINT FK_HOST_LANGUAGE_APP_LANGUAGE FOREIGN KEY (ID_LANG)
        REFERENCES APP_LANGUAGE (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_HOST_LANGUAGE_USER_HOST FOREIGN KEY (ID_HOST)
        REFERENCES USER_HOST (ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

-- APPLICATION PLAN
CREATE TABLE APP_PLAN (
    ID INT AUTO_INCREMENT,
    PLAN_TYPE ENUM('MONTH', 'YEAR') NOT NULL,
    PRICE DECIMAL(15 , 2 ) NOT NULL,
    CONSTRAINT PK_APP_PLAN PRIMARY KEY (ID),
    CONSTRAINT CK_APP_PLAN_PRICE CHECK (PRICE > 0)
);

-- PLAN FEATURE
CREATE TABLE PLAN_FEATURE (
    ID INT AUTO_INCREMENT,
    DETAIL TINYTEXT NOT NULL,
    CONSTRAINT PK_PLAN_FEATURE PRIMARY KEY (ID)
);

-- PLAN FEATURE - APP PLAN RELATIONSHIP
CREATE TABLE PLAN_FEATURE_APP_PLAN (
    ID_PLAN INT NOT NULL,
    ID_PLAN_FEATURE INT NOT NULL,
    CONSTRAINT PK_PLAN_FEATURE_APP_PLAN PRIMARY KEY (ID_PLAN , ID_PLAN_FEATURE),
    CONSTRAINT FK_PLAN_FEATURE_APP_PLAN_APP_PLAN FOREIGN KEY (ID_PLAN)
        REFERENCES APP_PLAN (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_PLAN_FEATURE_APP_PLAN_PLAN_FEATURE FOREIGN KEY (ID_PLAN_FEATURE)
        REFERENCES PLAN_FEATURE (ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

-- PLAN SUBSCRIPTION (APP PLAN - USER HOST)
CREATE TABLE PLAN_SUBSCRIPTION (
    ID_PLAN INT NOT NULL,
    ID_USER INT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_PLAN_SUBSCRIPTION PRIMARY KEY (ID_PLAN , ID_USER),
    CONSTRAINT FK_PLAN_SUBSCRIPTION_APP_PLAN FOREIGN KEY (ID_PLAN)
        REFERENCES APP_PLAN (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_PLAN_SUBSCRIPTION_USER_HOST FOREIGN KEY (ID_USER)
        REFERENCES USER_HOST (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT UQ_PLAN_SUBSCRIPTION_ID_USER UNIQUE (ID_USER)
);

-- LOCATION
CREATE TABLE ACCOMODATION_LOCATION (
    ID INT AUTO_INCREMENT,
    LAT DOUBLE NOT NULL,
    LNG DOUBLE NOT NULL,
    DIRECTION VARCHAR(100) NOT NULL,
    CITY VARCHAR(30) NOT NULL,
    ZIP INT,
    CONSTRAINT PK_ACCOMODATION_LOCATION PRIMARY KEY (ID)
);

-- ACCOMODATION CATEGORY
CREATE TABLE ACCOMODATION_CATEGORY (
    ID INT AUTO_INCREMENT,
    ACC_CAT VARCHAR(30) NOT NULL,
    CONSTRAINT PK_ACCOMODATION_CATEGORY PRIMARY KEY (ID)
);

-- ACCOMODATION
CREATE TABLE ACCOMODATION (
    REG_NUM VARCHAR(20) NOT NULL,
    BEDS INT(2),
    NUM_BATHROOMS INT(1),
    NUM_BEDROOMS INT(1),
    PRICE_PER_NIGHT DECIMAL(15 , 4 ),
    GUESTS INT,
    AREA DECIMAL(15 , 4 ) NOT NULL,
    ID_ACC_CATEGORY INT NOT NULL,
    ID_ACC_LOCATION INT NOT NULL,
    ID_USER_OWNER INT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_ACCOMODATION PRIMARY KEY (REG_NUM),
    CONSTRAINT FK_ACCOMODATION_CATEGORY FOREIGN KEY (ID_ACC_CATEGORY)
        REFERENCES ACCOMODATION_CATEGORY (ID)
        ON UPDATE CASCADE,
    CONSTRAINT FK_ACCOMODATION_LOCATION FOREIGN KEY (ID_ACC_LOCATION)
        REFERENCES ACCOMODATION_LOCATION (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_ACCOMODATION_USER_HOST FOREIGN KEY (ID_USER_OWNER)
        REFERENCES USER_HOST (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT UQ_ACCOMODATION_CATEGORY UNIQUE (ID_ACC_CATEGORY),
    CONSTRAINT UQ_ACCOMODATION_LOCATION UNIQUE (ID_ACC_LOCATION),
    CONSTRAINT CK_BEDS CHECK (BEDS > 0),
    CONSTRAINT CK_NUM_BATHROOMS CHECK (NUM_BATHROOMS > 0),
    CONSTRAINT CK_NUM_BEDROOMS CHECK (NUM_BEDROOMS > 0),
    CONSTRAINT CK_PRICE CHECK (PRICE_PER_NIGHT > 0),
    CONSTRAINT CK_AREA CHECK (AREA > 0)
);

-- SERVICE
CREATE TABLE ACCOMODATION_SERVICE (
    ID INT AUTO_INCREMENT,
    DENOMINATION VARCHAR(30) NOT NULL,
    CONSTRAINT PK_ACCOMODATION_SERVICE PRIMARY KEY (ID)
);

-- SERVICE --> EXTRA SERVICE
CREATE TABLE ACCOMODATION_SERVICE_EXTRA (
    ID INT AUTO_INCREMENT,
    PRICE DECIMAL(15 , 2 ) NOT NULL,
    CONSTRAINT PK_ACCOMODATION_SERVICE_EXTRA PRIMARY KEY (ID),
    CONSTRAINT FK_ACCOMODATION_SERVICE_EXTRA_ACC_SERVICE FOREIGN KEY (ID)
        REFERENCES ACCOMODATION_SERVICE (ID),
    CONSTRAINT CK_EXTRA_SERVICE_PRICE CHECK (PRICE > 0)
);

-- ACCOMODATION - SERVICE RELATIONSHIP
CREATE TABLE ACCOMODATION_ACC_SERVICE (
    ID_ACC VARCHAR(20) NOT NULL,
    ID_ACC_SERVICE INT NOT NULL,
    CONSTRAINT PK_ACCOMODATION_ACC_SERVICE PRIMARY KEY (ID_ACC , ID_ACC_SERVICE),
    CONSTRAINT FK_ACCOMODATION_ACC_SERVICE_ACCOMODATION FOREIGN KEY (ID_ACC)
        REFERENCES ACCOMODATION (REG_NUM)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_ACCOMODATION_ACC_SERVICE_ACCOMODATION_SERVICE FOREIGN KEY (ID_ACC_SERVICE)
        REFERENCES ACCOMODATION_SERVICE (ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

-- RULE
CREATE TABLE ACCOMODATION_RULE (
    ID INT AUTO_INCREMENT,
    RULE TINYTEXT NOT NULL,
    CONSTRAINT PK_ACCOMODATION_RULE PRIMARY KEY (ID)
);

-- ACCOMODATION - RULE RELATIONSHIP
CREATE TABLE ACCOMODATION_ACC_RULE (
    ID_ACC VARCHAR(20) NOT NULL,
    ID_ACC_RULE INT NOT NULL,
    CONSTRAINT PK_ACCOMODATION_ACC_RULE PRIMARY KEY (ID_ACC , ID_ACC_RULE),
    CONSTRAINT FK_ACCOMODATION_ACC_RULE_ACCOMODATION FOREIGN KEY (ID_ACC)
        REFERENCES ACCOMODATION (REG_NUM)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_ACCOMODATION_ACC_RULE_ACCOMODATION_RULE FOREIGN KEY (ID_ACC_RULE)
        REFERENCES ACCOMODATION_RULE (ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

-- IMAGE
CREATE TABLE ACCOMODATION_IMAGE (
    ID INT AUTO_INCREMENT,
    IMG_URL BLOB NOT NULL,
    ID_ACCOMODATION VARCHAR(20) NOT NULL,
    CONSTRAINT PK_ACCOMODATION_IMAGE PRIMARY KEY (ID),
    CONSTRAINT FK_ACCOMODATION_IMAGE_ACCOMODATION FOREIGN KEY (ID_ACCOMODATION)
        REFERENCES ACCOMODATION (REG_NUM)
        ON UPDATE CASCADE ON DELETE CASCADE
);


-- PROMOTIONAL CODE
CREATE TABLE PROMO_CODE (
    SERIAL_NUM VARCHAR(10) NOT NULL,
    AMOUNT_PERCENTAGE DECIMAL(15 , 4 ),
    DATE_START TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATE_END TIMESTAMP NOT NULL,
    ID_ACC VARCHAR(20) NOT NULL,
    ID_USER INT,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_PROMO_CODE PRIMARY KEY (SERIAL_NUM),
    CONSTRAINT FK_PROMO_CODE_USER FOREIGN KEY (ID_USER)
        REFERENCES USER_HOST (ID)
        ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_PROMO_CODE_ACCOMODATION FOREIGN KEY (ID_ACC)
        REFERENCES ACCOMODATION (REG_NUM)
        ON UPDATE CASCADE ON DELETE CASCADE
);

-- PAYMENT
CREATE TABLE PAYMENT (
    ID INT AUTO_INCREMENT,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_PAYMENT PRIMARY KEY (ID)
);

-- PAYMENT TYPES

CREATE TABLE PAYMENT_CREDIT_CARD (
    ID_PAYMENT INT NOT NULL,
    CARD_NUMBER VARCHAR(16) NOT NULL,
    CONSTRAINT PK_PAYMENT_CREDIT_CARD PRIMARY KEY (ID_PAYMENT),
    CONSTRAINT FK_CREDIT_CARD_PAYMENT FOREIGN KEY (ID_PAYMENT)
        REFERENCES PAYMENT (ID),
    CONSTRAINT CK_CARD_NUMBER_LENGTH CHECK (LENGTH(CARD_NUMBER) > 13),
    CONSTRAINT UQ_CARD_NUMBER UNIQUE (CARD_NUMBER)
);

-- PAYPAL
CREATE TABLE PAYMENT_PAYPAL (
    ID_PAYMENT INT NOT NULL,
    ACCOUNT_EMAIL VARCHAR(50) NOT NULL,
    CONSTRAINT PK_PAYMENT_PAYPAL PRIMARY KEY (ID_PAYMENT),
    CONSTRAINT FK_PAYPAL_PAYMENT FOREIGN KEY (ID_PAYMENT)
        REFERENCES PAYMENT (ID),
    CONSTRAINT UQ_PAYPAL UNIQUE (ACCOUNT_EMAIL)
);

-- BOOKING BILL
-- CREATE TABLE BOOKING_BILL(
--  BILL_NUM VARCHAR(9) NOT NULL,
--  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--  CONSTRAINT PK_BOOKING_BILL PRIMARY KEY(BILL_NUM),
--  CONSTRAINT UQ_PAYMENT_ID UNIQUE(PAYMENT_ID)
-- );

-- BOOKING
CREATE TABLE BOOKING(
  ID INT AUTO_INCREMENT,
  CHECK_IN DATETIME NOT NULL,
  CHECK_OUT DATETIME NOT NULL,
  GUESTS INT NOT NULL,
  AMOUNT DECIMAL(15 , 2 ) NOT NULL,
  DISCCOUNT DECIMAL(15 , 2 ) DEFAULT 0, -- EN EUROS
  SERVICE_FEE DECIMAL(15 , 2 ) AS (AMOUNT * 0.10),
  TOTAL DECIMAL(15 , 2 ) AS (AMOUNT + SERVICE_FEE - DISCCOUNT),
  ID_USER INT NOT NULL, -- USER WHO MAKE THE BOOKING
  ID_ACCOMODATION VARCHAR(20) NOT NULL,
  PAYMENT_ID INT,
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT PK_BOOKING PRIMARY KEY(ID),
  CONSTRAINT FK_BOOKING_USER FOREIGN KEY(ID_USER) REFERENCES APP_USER(ID) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_BOOKING_ACCOMODATION FOREIGN KEY(ID_ACCOMODATION) REFERENCES ACCOMODATION(REG_NUM) ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT FK_BOOKING_PAYMENT FOREIGN KEY(PAYMENT_ID) REFERENCES PAYMENT(ID) ON UPDATE CASCADE ON DELETE SET NULL,
  CONSTRAINT CK_BOOKING_DATES CHECK (CHECK_IN < CHECK_OUT),
  CONSTRAINT CK_BOOKING_GUESTS CHECK (GUESTS > 0),
  CONSTRAINT CK_BOOKING_AMOUNT CHECK(AMOUNT > 0),
  CONSTRAINT UQ_PAYMENT UNIQUE(PAYMENT_ID)
);

-- USER - USER REVIEW
CREATE TABLE USER_REVIEW (
    ID INT AUTO_INCREMENT,
    CONTENT MEDIUMTEXT,
    STARS INT DEFAULT 1,
    ID_USER_A INT NOT NULL,
    ID_USER_B INT,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_USER_REVIEW PRIMARY KEY (ID),
    CONSTRAINT FK_USER_REVIEW_USER_A FOREIGN KEY (ID_USER_A)
        REFERENCES APP_USER (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_USER_REVIEW_USER_B FOREIGN KEY (ID_USER_B)
        REFERENCES APP_USER (ID)
        ON UPDATE CASCADE ON DELETE SET NULL,
    CONSTRAINT CK_NOT_SAME_USER CHECK (ID_USER_A <> ID_USER_B),
    CONSTRAINT CK_USER_REVIEW_STARS CHECK (STARS BETWEEN 1 AND 5)
);

-- USER - ACCOMODATION REVIEW
CREATE TABLE ACCOMODATION_REVIEW (
    ID INT AUTO_INCREMENT,
    CONTENT MEDIUMTEXT,
    STARS INT DEFAULT 1,
    ID_USER INT NOT NULL,
    ID_ACC VARCHAR(20) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_ACCOMODATION_REVIEW PRIMARY KEY (ID),
    CONSTRAINT FK_ACCOMODATION_REVIEW_USER FOREIGN KEY (ID_USER)
        REFERENCES APP_USER (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_ACCOMODATION_REVIEW_ACC FOREIGN KEY (ID_ACC)
        REFERENCES ACCOMODATION (REG_NUM)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT CK_ACCOMODATION_REVIEW_STARS CHECK (STARS BETWEEN 1 AND 5)
);

-- ACCOMODATION REVIEW REPLY
-- A REPLY IS JUST AVAILABLE FOR ACCOMODATION HOST WHO IS ABLE TO REPLY 1 TIME FOR ACCOMODATION REVIEW
CREATE TABLE ACCOMODATION_REVIEW_REPLY (
    ID INT AUTO_INCREMENT,
    CONTENT MEDIUMTEXT NOT NULL,
    ID_ACCOMODATION_REVIEW INT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_ACCOMODATION_REVIEW_REPLY PRIMARY KEY (ID),
    CONSTRAINT FK_ACCOMODATION_REVIEW_REPLY_ACCOMODATION_REVIEW FOREIGN KEY (ID_ACCOMODATION_REVIEW)
        REFERENCES ACCOMODATION_REVIEW (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT UQ_ACCOMODATION_REVIEW_REPLY_ID_ACCOMODATION_REVIEW UNIQUE (ID_ACCOMODATION_REVIEW)
);

-- SAVED ACCOMODATION
CREATE TABLE SAVED_ACCOMODATION (
    ID INT AUTO_INCREMENT,
    ID_USER INT NOT NULL,
    ID_ACC VARCHAR(20) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_SAVED_ACCOMODATION PRIMARY KEY (ID),
    CONSTRAINT FK_SAVED_ACCOMODATION_USER FOREIGN KEY (ID_USER)
        REFERENCES APP_USER (ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_SAVED_ACCOMODATION_ACC FOREIGN KEY (ID_ACC)
        REFERENCES ACCOMODATION (REG_NUM)
        ON UPDATE CASCADE ON DELETE CASCADE
);